/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication.db;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author jigar
 */
public class cart1 extends javax.swing.JFrame {

    /**
     * Creates new form cart1
     */
    public cart1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m2 = new javax.swing.JLabel();
        m3 = new javax.swing.JLabel();
        l6 = new javax.swing.JLabel();
        k1 = new javax.swing.JLabel();
        k9 = new javax.swing.JLabel();
        k0 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        m2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                m2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        m3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                m3AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        l6.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                l6AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        k1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                k1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        k9.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                k9AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        k0.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                k0AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(k9, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(k0, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(k0, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(k1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(k9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
    private void m2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_m2AncestorAdded
        // TODO add your handling code here:
         login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("kid1"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(m2.getWidth(),m2.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               m2.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
        /*    }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }//GEN-LAST:event_m2AncestorAdded

    private void m3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_m3AncestorAdded
        // TODO add your handling code here:
       login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path2 from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("kid2"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid2.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(m3.getWidth(),m3.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               m3.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
         /*   }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }//GEN-LAST:event_m3AncestorAdded

    *//*public void m2AncestorAdded(javax.swing.event.AncestorEvent evt) {                                 
        // TODO add your handling code here:
         login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("kid1"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(m2.getWidth(),m2.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               m2.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
          /*  }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }                                

    public void m3AncestorAdded(javax.swing.event.AncestorEvent evt) {                                 
        // TODO add your handling code here:
       login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path2 from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("kid2"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid2.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(m3.getWidth(),m3.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               m3.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
         /*   }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }   
    */
    private void l6AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_l6AncestorAdded
        // TODO add your handling code here:
         login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path3 from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("man1"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("man1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l6.getWidth(),l6.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l6.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
            }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }//GEN-LAST:event_l6AncestorAdded

    private void k1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_k1AncestorAdded
        // TODO add your handling code here:
         login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path4 from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("man2"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("man2.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(k1.getWidth(),k1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               k1.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
            }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }//GEN-LAST:event_k1AncestorAdded

    private void k9AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_k9AncestorAdded
        // TODO add your handling code here:
         login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path5 from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("w1"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("w1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(k9.getWidth(),k9.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               k9.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
            }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }//GEN-LAST:event_k9AncestorAdded

    private void k0AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_k0AncestorAdded
        // TODO add your handling code here:
         login p=new login();
Connection conn =null;
        PreparedStatement pstmt=null;
try
{
     Class.forName("com.mysql.jdbc.Driver");
            
            //Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/?user=root&password=rootpassword"); 
            
            conn=DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mitesh","root","mitesh123");
            String k=p.Username;
            //pstmt=conn.prepareStatement("select path from new_table where name like ? ");
            Statement pst=null;
           pst=conn.createStatement();
         //  pstmt=conn.prepareStatement("select path from new_table where name like ? ");
                 //      pstmt.setString(1,k);

            ResultSet rs = pst.executeQuery("select name,path6 from new_table");
            while(rs.next())
            {String n=rs.getString(1);
            String w=rs.getString(2);
            if((p.Username == null ? n == null : p.Username.equals(n)) && w.equals("w2"))
            {
           ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("w2.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(k0.getWidth(),k0.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               k0.setIcon(i);
               //l1.setText("w");
               break;
            }
        /*    else
                m2.setText(n);*/
                
            
           //JOptionPane.showMessageDialog(null, p.Username);

         //   else
          // {
               /*ImageIcon myimage=new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kid1.jpg")));
               Image img1=myimage.getImage();
               Image img2=img1.getScaledInstance(l1.getWidth(),l1.getHeight(), Image.SCALE_SMOOTH);
               ImageIcon i=new ImageIcon(img2);
               l1.setIcon(i);*/
            //   l1.setText(w);
                             // l1.setText(n);

               
        //   }
            /*  else if(!rs.next())
            {
                               // JOptionPane.showMessageDialog(null, "login unsuccessfull");
                l1.setText(w);
                                dispose();
            }
            else
                  l1.setText(n);*/
            }
            }
catch(HeadlessException | ClassNotFoundException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
    }//GEN-LAST:event_k0AncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cart1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel k0;
    private javax.swing.JLabel k1;
    private javax.swing.JLabel k9;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel m2;
    private javax.swing.JLabel m3;
    // End of variables declaration//GEN-END:variables
}
